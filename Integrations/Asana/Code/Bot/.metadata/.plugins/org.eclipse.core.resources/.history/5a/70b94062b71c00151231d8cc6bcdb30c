//Owner: Aniruddha Varshney
//Task 2
//Date of Submission: Monday, June 29, 2015
package com.teamchat.asana;


import java.io.IOException;
import java.util.Arrays;
import org.apache.http.client.ClientProtocolException;
import org.json.JSONArray;
import org.json.JSONObject;
import web.asana.servelet.Data;
import com.google.gson.Gson;
import com.teamchat.client.annotations.OnAlias;
import com.teamchat.client.annotations.OnKeyword;
import com.teamchat.client.sdk.Field;
import com.teamchat.client.sdk.TeamchatAPI;
import com.teamchat.client.sdk.chatlets.PrimaryChatlet;
import com.teamchat.client.sdk.chatlets.TextChatlet;

public class MainFunc {

	public static String ProjectName;
	public static String Notes;
	public static Asana_basics ab;
	final String USER_AGENT = "Mozilla/5.0";

	@OnKeyword("asana")
	public void ConnectToAsana(TeamchatAPI api) throws IOException {
		api.perform(api
				.context()
				.currentRoom()
				.post(new PrimaryChatlet()
						.setQuestionHtml(
								"<html><body><a target='_blank' href='https://app.asana.com/-/oauth_authorize?client_id=37903488157876&redirect_uri=http%3A%2F%2Flocalhost%3A8080%2FAsana_Bot%2FRedirect_url&response_type=code'>Click here to connect your Teamchat Account to Asana</a>")
						.alias("start")));
		Database_Handler db = new Database_Handler();
		ab = db.GetBasicStuff(api.context().currentSender().getEmail());
	}

	@OnAlias("start")
	public void start(TeamchatAPI api) {
		api.performPostInCurrentRoom(new TextChatlet("Successfully Connected"));
	}

	@OnKeyword("create project")
	public void createProject(TeamchatAPI api) throws IOException {
		// get workspace id and name from json array
		GetWorkspace gwp = new GetWorkspace();
		Field f = null;
		f = gwp.getWorkspace(ab.getAccess_token(), api);

		PrimaryChatlet chtlet = new PrimaryChatlet().setQuestionHtml(
				"Fill in details of the project").setReplyScreen(
				api.objects()
						.form()
						.addField(
								api.objects().input().label("Project Name")
										.name("project_name"))
						.addField(
								api.objects().input().label("Notes")
										.name("notes")).addField(f));

		chtlet.alias("project");

		api.performPostInCurrentRoom(chtlet);

	}

	@OnAlias("project")
	public void create(TeamchatAPI api) throws IOException {

		// save input from above fields

		ProjectName = api.context().currentReply().getField("project_name");
		String Notes = api.context().currentReply().getField("notes");

		String[] Workspace = api.context().currentReply()
				.getField("workspace_name").split("-");
		long id = Long.valueOf(Workspace[Workspace.length - 1]);
		System.out.println(id);
		String URL = "https://app.asana.com/api/1.0/projects", URL_parameter = "name="
				+ ProjectName + "&notes=" + Notes + "&workspace=" + id;
		new SendPost().sendPost(URL, USER_AGENT, URL_parameter,
				ab.getAccess_token());
		api.perform(api.context().currentRoom()
				.post(new TextChatlet("Project Created!")));

	}

	@OnKeyword("delete project")
	public void deleteProject(TeamchatAPI api) throws ClientProtocolException,
			IOException {
		String URL = "https://app.asana.com/api/1.0/users/me/projects";
		String URL_parameter = "";

		JSONArray jarr = new JSONArray();
		JSONObject json_data = null;
		SendPost sp = new SendPost();
		jarr = sp.sendPost(URL, USER_AGENT, URL_parameter);

		for (int i = 0; i < jarr.length(); i++) {
			json_data = jarr.getJSONObject(i);
			for (int j = 0; j <= i; j++) {

				Project_id_array[j] = json_data.getInt("id");
				Project_name_array[j] = json_data.getString("name");
			}

		}
		for (int i = 0; i < Project_id_array.length; i++) {
			f = api.objects().select().addOption(Project_name_array[i])
					.name("project_name");
		}
		api.perform(api
				.context()
				.currentRoom()
				.post(new PrimaryChatlet()
						.setQuestion("Select project to be deleted")
						.setReplyScreen(api.objects().form().addField(f))
						.alias("delete")));

	}

	@OnAlias("delete")
	public void delete(TeamchatAPI api) throws IOException {
		int project_id;
		String Workspace_name = api.context().currentReply()
				.getField("project_name");
		int id = Arrays.asList(Project_name_array).indexOf(Workspace_name);
		project_id = Project_id_array[id];
		String URL = "https://app.asana.com/api/1.0/projects/" + project_id;
		String URL_parameter;
		URL_parameter = "";
		SendDelete sd = new SendDelete();
		sd.sendDelete(URL, USER_AGENT, URL_parameter);
		api.perform(api.context().currentRoom()
				.post(new TextChatlet("Project Deleted!")));

	}

}